<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCatapultFront</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init vars
slingXpivot = x;
slingYpivot = y-60;
slingX = slingXpivot;
slingY = slingYpivot;
aimDir = 0;

pullback = false;
letgo = false;

loaded = false;
firingQueue = 0;
trackStartPos = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Catapult controls
if global.pause || instance_exists(objWinMenu) exit;

var numberOfCats = instance_number(objCat);
if numberOfCats &lt;= 0 exit;

if mouse_check_button_pressed(mb_left)
{
var dis = point_distance(slingXpivot, slingYpivot, mouse_x, mouse_y);
if dis &lt; 32
    {
    pullback = true;
    if global.audio SoundPlay(sndStretch);
    }
}

if mouse_check_button_released(mb_left)
{
if pullback
    {
    pullback = false;
    letgo = true;
    audio_stop_sound(sndStretch);
    }
}


if loaded
{
if pullback
    {
    var dir = point_direction(slingXpivot, slingYpivot, mouse_x, mouse_y);
    var dis = point_distance(slingXpivot, slingYpivot, mouse_x, mouse_y);
    aimDir = point_direction(mouse_x, slingYpivot, slingXpivot, mouse_y);
    var dif = angle_difference(aimDir, 280);
    if abs(dif) &gt; 130
        {
        aimDir = 280 + (130 * sign(dif));
        }
    dis = min(dis, 100);
    slingX = slingXpivot + lengthdir_x(dis, dir);
    slingY = slingYpivot + lengthdir_y(dis, dir);
    }
if letgo
    {
    var dir = point_direction(slingXpivot, slingYpivot, slingX, slingY);
    var dis = point_distance(slingX, slingY, slingXpivot, slingYpivot);
    dis = min(20, dis);
    slingX -= lengthdir_x(dis, dir);
    slingY -= lengthdir_y(dis, dir);
    if (dis &lt; 1 &amp;&amp; loadedCat.inPult)
        {
        if global.audio SoundPlay(sndCatLaunch);
        letgo = false;
        loadedCat.phy_rotation = aimDir;
        loadedCat.state = "gone";
        with (objTrackDot)
            {
            instance_destroy();
            }
        with (loadedCat)
            {
            physics_apply_local_force(0, 0, 80, 0);
            inPult = false;
            }
        }
    }
}
else
{
//If NOT loaded
for (var n = 0; n &lt; numberOfCats; n++;)
    {
    inst = instance_find(objCat, n);
    if inst.position == firingQueue 
        {
        inst.inPult = true;
        loaded = true;
        letgo = false;
        loadedCat = inst;
        firingQueue ++;
        break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_sprite(sprCatapultBack, 0, x, y-28);

with(objCat)
{
draw_set_alpha(1);
draw_self();
}

var darkBrown = make_color_rgb(63, 24, 9);

var rot = point_direction(slingX, slingY, slingXpivot, slingYpivot);
draw_line_width_color(x, y-50, slingX, slingY, 4, darkBrown, darkBrown);
draw_sprite_ext(sprSlingBack, 0, slingX, slingY, 1, 1, rot, c_white, 1);

draw_line_width_color(x-15, y-45, slingX-5, slingY+5, 4, darkBrown, darkBrown);
draw_sprite_ext(sprSlingFront, 0, slingX-5, slingY+5, 1, 1, rot, c_white, 1);

draw_sprite(sprCatapultFront, 0, x, y);

if (pullback)
{
trackStartPos ++;
if trackStartPos &gt;= 16 trackStartPos = 0;
var dir = aimDir;
var xpos = slingXpivot;
var ypos = slingYpivot;
var grav = 0;
var alpha = 2;
var spd = 16;
while (true)
    {
    dis = point_distance(xpos, ypos, objBigPlanet.x, objBigPlanet.y);
    xpospre = xpos;
    ypospre = ypos;
    xpos += lengthdir_x(spd, dir);
    ypos -= lengthdir_y(spd, dir);
    dir = point_direction(xpospre, ypos, xpos, ypospre);
    if dis &lt; 350
        {
        dir2 = point_direction(xpos, ypos, objBigPlanet.x, objBigPlanet.y);
        xpos += lengthdir_x(grav, dir2);
        ypos += lengthdir_y(grav, dir2);
        grav += 0.25;
        }
    draw_sprite_ext(sprPlotDotSmall, 0, xpos+lengthdir_x(trackStartPos, dir), ypos-lengthdir_y(trackStartPos, dir), 1, 1, 0, c_white, alpha);
    alpha -= 0.05;
    if (xpos &lt; 0 || xpos &gt; 1280) || (ypos &lt; 0 || ypos &gt; 720)
        {
        break;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,75</point>
    <point>40,40</point>
  </PhysicsShapePoints>
</object>
