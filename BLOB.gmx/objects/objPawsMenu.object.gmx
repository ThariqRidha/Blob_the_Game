<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check buttons
var mx = mouse_x;
var my = mouse_y;

if mouse_check_button_pressed(mb_left)
{
// Audio
if (point_distance(view_xview[0] + 760, view_yview[0] + 200, mx, my) &lt; 60)
    {
    global.audio = !global.audio;
    if global.audio audio_play_sound(sndButton, 0, false);
    }
// Retry
if (point_distance(view_xview[0] + 760, view_yview[0] + 360, mx, my) &lt; 60)
    {
    if global.audio audio_play_sound(sndButton, 0, false);
    global.pause = false;
    room_restart();
    }
// Main Menu
if (point_distance(view_xview[0] + 760, view_yview[0] + 520, mx, my) &lt; 60)
    {
    if global.audio audio_play_sound(sndButton, 0, false);
    game_restart();
    }    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.5);
draw_set_color(c_black);
draw_rectangle(0, 0, 1280, 720, 0);

draw_set_alpha(1);
draw_sprite(sprPawsBackground, 0, 640, 360);

if global.audio
{
draw_sprite(sprPawsAudio, 0, 760, 200);
}
else
{
draw_sprite_ext(sprPawsAudio, 0, 760, 200, 0.9, 0.9, 0, c_gray, 1);
}
draw_sprite(sprPawsRetry, 0, 760, 360);
draw_sprite(sprPawsMainMenu, 0, 780, 520);

draw_set_font(fntFawn60);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(540-1, 360-1, "RESTART");
draw_text(540+1, 360-1, "RESTART");
draw_text(540+1, 360+1, "RESTART");
draw_text(540-1, 360+1, "RESTART");
draw_set_color(c_white);
draw_text(540, 360, "RESTART");

draw_set_font(fntFawn60);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(540-1, 200-1, "AUDIO");
draw_text(540+1, 200-1, "AUDIO");
draw_text(540+1, 200+1, "AUDIO");
draw_text(540-1, 200+1, "AUDIO");
draw_set_color(c_white);
draw_text(540, 200, "AUDIO");

draw_set_font(fntFawn60);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(560-1, 520-1, "MAIN MENU");
draw_text(560+1, 520-1, "MAIN MENU");
draw_text(560+1, 520+1, "MAIN MENU");
draw_text(560-1, 520+1, "MAIN MENU");
draw_set_color(c_white);
draw_text(560, 520, "MAIN MENU");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
